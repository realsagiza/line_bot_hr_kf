from linebot.models import (
    MessageEvent, TextMessage, TextSendMessage, ButtonsTemplate, TemplateSendMessage, PostbackAction
)
from config import Config

# ‡πÄ‡∏Å‡πá‡∏ö state ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
user_session = {}

def reset_state(user_id):
    """ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï state ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà """
    user_session[user_id] = {
        "state": "choosing_action",
        "amount": None,
        "reason": None,
        "location": None
    }

def handle_user_request(event, line_bot_api):
    """ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå '‡πÄ‡∏°‡∏ô‡∏π' """
    user_id = event.source.user_id

    if user_id not in user_session:
        reset_state(user_id)

    reply_message = TemplateSendMessage(
        alt_text="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π",
        template=ButtonsTemplate(
            text="üìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
            actions=[PostbackAction(label="‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î", data=f"menu_withdraw_cash|{user_id}")]
        )
    )
    line_bot_api.reply_message(event.reply_token, reply_message)

def handle_postback(event, line_bot_api):
    """ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î """
    data = event.postback.data.split("|")
    action = data[0]
    user_id = data[-1]

    if user_id not in user_session:
        reset_state(user_id)

    reply_message = None

    if action == "menu_withdraw_cash":
        user_session[user_id]["state"] = "choosing_amount"
        reply_message = TemplateSendMessage(
            alt_text="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å",
            template=ButtonsTemplate(
                text="üìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å",
                actions=[
                    PostbackAction(label="40 ‡∏ö‡∏≤‡∏ó", data=f"select_amount|40|{user_id}"),
                    PostbackAction(label="80 ‡∏ö‡∏≤‡∏ó", data=f"select_amount|80|{user_id}"),
                    PostbackAction(label="100 ‡∏ö‡∏≤‡∏ó", data=f"select_amount|100|{user_id}"),
                    PostbackAction(label="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏≠‡∏á", data=f"select_amount|custom|{user_id}")
                ]
            )
        )

    elif action == "select_amount":
        amount = data[1]
        if amount == "custom":
            user_session[user_id]["state"] = "waiting_for_amount"
            reply_message = TextSendMessage(text="üìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å (‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)")
        else:
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if not amount.isdigit():
                reply_message = TextSendMessage(text="‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
            else:
                user_session[user_id]["amount"] = amount
                user_session[user_id]["state"] = "choosing_reason"
                reply_message = send_reason_menu(user_id)

    elif action == "select_reason":
        reason = data[1]
        if reason == "other":
            user_session[user_id]["state"] = "waiting_for_other_reason"
            reply_message = TextSendMessage(text="üìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏á‡∏¥‡∏ô")
        else:
            user_session[user_id]["reason"] = reason
            user_session[user_id]["state"] = "waiting_for_location"
            reply_message = send_location_menu(user_id)

    elif action == "select_location":
        user_session[user_id]["location"] = data[1]
        send_summary(user_id, line_bot_api)
        reset_state(user_id)
        return

    if reply_message:
        line_bot_api.reply_message(event.reply_token, reply_message)

def handle_text_input(event, line_bot_api):
    """ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå """
    user_id = event.source.user_id
    text = event.message.text.strip()

    if user_id not in user_session:
        reset_state(user_id)

    if text.lower() == "‡πÄ‡∏°‡∏ô‡∏π":
        reset_state(user_id)
        handle_user_request(event, line_bot_api)
        return

    current_state = user_session[user_id]["state"]

    if current_state == "waiting_for_amount" and text.isdigit():
        user_session[user_id]["amount"] = text
        user_session[user_id]["state"] = "choosing_reason"
        reply_message = send_reason_menu(user_id)

    elif current_state == "waiting_for_amount":
        if text.isdigit():  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
            user_session[user_id]["amount"] = text
            user_session[user_id]["state"] = "choosing_reason"
            reply_message = send_reason_menu(user_id)
        else:
            reply_message = TextSendMessage(text="‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")

    elif current_state == "waiting_for_other_reason":
        if len(text.strip()) > 0:  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏°‡∏ú‡∏•
            user_session[user_id]["reason"] = text
            user_session[user_id]["state"] = "waiting_for_location"
            reply_message = send_location_menu(user_id)
        else:
            reply_message = TextSendMessage(text="‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô")

    line_bot_api.reply_message(event.reply_token, reply_message)

def send_reason_menu(user_id):
    """ ‡∏™‡πà‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏á‡∏¥‡∏ô """
    return TemplateSendMessage(
        alt_text="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏á‡∏¥‡∏ô",
        template=ButtonsTemplate(
            text="üìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏á‡∏¥‡∏ô",
            actions=[
                PostbackAction(label="‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á", data=f"select_reason|ice|{user_id}"),
                PostbackAction(label="‡πÄ‡∏ï‡∏¥‡∏°‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô", data=f"select_reason|fuel|{user_id}"),
                PostbackAction(label="‡∏≠‡∏∑‡πà‡∏ô‡πÜ", data=f"select_reason|other|{user_id}")
            ]
        )
    )

def send_location_menu(user_id):
    """ ‡∏™‡πà‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô """
    return TemplateSendMessage(
        alt_text="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô",
        template=ButtonsTemplate(
            text="üìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô",
            actions=[
                PostbackAction(label="‡∏Ñ‡∏•‡∏±‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏¢‡πá‡∏ô", data=f"select_location|cold_storage|{user_id}"),
                PostbackAction(label="‡πÇ‡∏ô‡∏ô‡∏¥‡πÇ‡∏Å‡∏∞", data=f"select_location|noniko|{user_id}")
            ]
        )
    )

def send_summary(user_id, line_bot_api):
    """ ‡∏™‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡πâ‡∏á‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ """
    amount = user_session[user_id]["amount"]
    reason = user_session[user_id]["reason"]
    location = "‡∏Ñ‡∏•‡∏±‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏¢‡πá‡∏ô" if user_session[user_id]["location"] == "cold_storage" else "‡πÇ‡∏ô‡∏ô‡∏¥‡πÇ‡∏Å‡∏∞"

    summary_text = (
        f"‚úÖ ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥\n"
        f"üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: {amount} ‡∏ö‡∏≤‡∏ó\n"
        f"üìå ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: {reason}\n"
        f"üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô: {location}\n"
        f"üîÑ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•"
    )

    line_bot_api.push_message(user_id, TextSendMessage(text=summary_text))